/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutExperimentsImport } from './routes/_layout/experiments'
import { Route as LayoutComponentsImport } from './routes/_layout/components'
import { Route as LayoutCardsImport } from './routes/_layout/cards'
import { Route as LayoutExperimentsPhysicsPlaygroundImport } from './routes/_layout/experiments/physics-playground'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExperimentsRoute = LayoutExperimentsImport.update({
  id: '/experiments',
  path: '/experiments',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutComponentsRoute = LayoutComponentsImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCardsRoute = LayoutCardsImport.update({
  id: '/cards',
  path: '/cards',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutExperimentsPhysicsPlaygroundRoute =
  LayoutExperimentsPhysicsPlaygroundImport.update({
    id: '/physics-playground',
    path: '/physics-playground',
    getParentRoute: () => LayoutExperimentsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_layout/cards': {
      id: '/_layout/cards'
      path: '/cards'
      fullPath: '/cards'
      preLoaderRoute: typeof LayoutCardsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/components': {
      id: '/_layout/components'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof LayoutComponentsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/experiments': {
      id: '/_layout/experiments'
      path: '/experiments'
      fullPath: '/experiments'
      preLoaderRoute: typeof LayoutExperimentsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/experiments/physics-playground': {
      id: '/_layout/experiments/physics-playground'
      path: '/physics-playground'
      fullPath: '/experiments/physics-playground'
      preLoaderRoute: typeof LayoutExperimentsPhysicsPlaygroundImport
      parentRoute: typeof LayoutExperimentsImport
    }
  }
}

// Create and export the route tree

interface LayoutExperimentsRouteChildren {
  LayoutExperimentsPhysicsPlaygroundRoute: typeof LayoutExperimentsPhysicsPlaygroundRoute
}

const LayoutExperimentsRouteChildren: LayoutExperimentsRouteChildren = {
  LayoutExperimentsPhysicsPlaygroundRoute:
    LayoutExperimentsPhysicsPlaygroundRoute,
}

const LayoutExperimentsRouteWithChildren =
  LayoutExperimentsRoute._addFileChildren(LayoutExperimentsRouteChildren)

interface LayoutRouteChildren {
  LayoutCardsRoute: typeof LayoutCardsRoute
  LayoutComponentsRoute: typeof LayoutComponentsRoute
  LayoutExperimentsRoute: typeof LayoutExperimentsRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutCardsRoute: LayoutCardsRoute,
  LayoutComponentsRoute: LayoutComponentsRoute,
  LayoutExperimentsRoute: LayoutExperimentsRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/auth': typeof AuthRoute
  '/cards': typeof LayoutCardsRoute
  '/components': typeof LayoutComponentsRoute
  '/experiments': typeof LayoutExperimentsRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/experiments/physics-playground': typeof LayoutExperimentsPhysicsPlaygroundRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/cards': typeof LayoutCardsRoute
  '/components': typeof LayoutComponentsRoute
  '/experiments': typeof LayoutExperimentsRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/experiments/physics-playground': typeof LayoutExperimentsPhysicsPlaygroundRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/auth': typeof AuthRoute
  '/_layout/cards': typeof LayoutCardsRoute
  '/_layout/components': typeof LayoutComponentsRoute
  '/_layout/experiments': typeof LayoutExperimentsRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/experiments/physics-playground': typeof LayoutExperimentsPhysicsPlaygroundRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/cards'
    | '/components'
    | '/experiments'
    | '/'
    | '/experiments/physics-playground'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/cards'
    | '/components'
    | '/experiments'
    | '/'
    | '/experiments/physics-playground'
  id:
    | '__root__'
    | '/_layout'
    | '/auth'
    | '/_layout/cards'
    | '/_layout/components'
    | '/_layout/experiments'
    | '/_layout/'
    | '/_layout/experiments/physics-playground'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthRoute: typeof AuthRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AuthRoute: AuthRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/auth"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/cards",
        "/_layout/components",
        "/_layout/experiments",
        "/_layout/"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/_layout/cards": {
      "filePath": "_layout/cards.tsx",
      "parent": "/_layout"
    },
    "/_layout/components": {
      "filePath": "_layout/components.tsx",
      "parent": "/_layout"
    },
    "/_layout/experiments": {
      "filePath": "_layout/experiments.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/experiments/physics-playground"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/experiments/physics-playground": {
      "filePath": "_layout/experiments/physics-playground.tsx",
      "parent": "/_layout/experiments"
    }
  }
}
ROUTE_MANIFEST_END */
